(* @NESTEDCOMMENTS := 'Yes' *)
(* @GLOBAL_VARIABLE_LIST := 'Variáveis globais' *)
(* @PATH := '' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
(*CONSTANTES----------------------------------------------------------------------*)
VAR_GLOBAL CONSTANT
	SEGURANCA_ENABLED: BOOL := TRUE; (* HABILITA OU DESABILITA A TELA DE SENHA *)
	TEMPO_RESP_SENSORES: TIME := T#3s; (* TEMPO DE RESPOSTA DOS SENSORES *)
	TEMPO_FINAL_CICLO: TIME := T#2s; (* TEMPO DE LIBERAÇÃO DO BATENTE NO FINAL DO CICLO *)
	NUMMAX_SENSORES: USINT := 14; (* NUMERO MAXIMO DE SENSORES *)
	NUMMAX_PARAFUSA: USINT := 1; (* NUMERO MAXIMO DE PARAFUSADEIRAS *)
	NUMMAX_PROGBITS: USINT := 4; (* NUMERO MAXIMO DE PROGBITS DA PARAFUSADEIRA *)
	NUMMAX_MODELOS: USINT := 15; (* NUMERO MAXIMO DE MODELOS *)
	NUMMAX_SAIDAS: USINT := 14; (* NUMERO MAXIMO DE SAIDAS - SENSORES E PARAFUSADEIRA *)
	NUM_ETAPAS: USINT := 12; (* NUMERO DE ETAPAS / SEQUENCIA *)
	NUM_ATIVOS: USINT := 4; (* NUMERO DE ATIVOS - 3 DISPOSITIVOS LIGADOS E O PROG *)
	CODE_PARAFUSA: USINT := 15; (* CODIGO DA PARAFUSADEIRA NA TELA DE SETUP *)
	CODE_KEY_F: ARRAY [1..7] OF USINT := 16#70, 16#71, 16#72, 16#73, 16#74, 16#75, 16#76; (* CODIGO DAS TECLAS F1..F7 *)
	CODE_KEY_MAIN: USINT := 16#24; (* CODIGO DA TECLA MAIN *)
	CODE_KEY_DOT: USINT := 16#2E; (* CODIGO DA TECLA [- +/.] *)
	CODE_KEY_ZERO: USINT := 16#30; (* CODIGO DA TECLA ZERO *)
	CODE_KEY_ESC: USINT := 16#1B; (* CODIGO DA TECLA ESC *)
	CODE_KEY_UP: USINT := 16#26; (* CODIGO DA TECLA UP - SETA P/ CIMA *)
	CODE_KEY_DOWN: USINT := 16#28; (* CODIGO DA TECLA DOWN - SETA P/ BAIXO *)
	CODE_KEY_LEFT: USINT := 16#25; (* CODIGO DA TECLA LEFT - SETA P/ ESQUERDA *)
	CODE_KEY_RIGHT: USINT := 16#27; (* CODIGO DA TECLA RIGHT - SETA P/ DIREITA *)
END_VAR


(*VARS GERAIS---------------------------------------------------------------------*)
VAR_GLOBAL
(*-- passos da programacao --*)
	PRIMEIRO_STEP: BOOL := TRUE;
	SEGUNDO_STEP: BOOL;
	TERCEIRO_STEP: BOOL;
	QUARTO_STEP: BOOL;
	QUINTO_STEP: BOOL;
	SEXTO_STEP: BOOL;
	SETIMO_STEP: BOOL;
	OITAVO_STEP: BOOL;
	NONO_STEP: BOOL;
	DECIMO_STEP: BOOL;
	ONZE_STEP: BOOL;
	DOZE_STEP: BOOL;
	TREZE_STEP: BOOL;
	QUATORZE_STEP: BOOL;
	QUINZE_STEP: BOOL;
(*-- indices da var Matriz --*)
	X: USINT := 1; (* INDICE DE MODELO DA VAR MATRIZ *)
	Y: USINT := 1; (* INDICE DE ETAPA DA VAR MATRIZ *)
	Z: USINT := 1; (* INDICE DE ATIVO DA VAR MATRIZ *)
(*-- variaveis da ihm --*)
	IHM_X: USINT := 1; (* INDICE DO MODELO SELECIONADO NA IHM *)
	IHM_INT_ETAPAS: USINT; (* NUMERO DE ETAPAS APRESENTADO NA TELA SETUP *)
	IHM_INT_ATIVOS: ARRAY [1..4] OF USINT; (* NUMEROS DA SEQUENCIA ATUAL DA MATRIZ NA TELA SETUP *)
	IHM_INT_SENHA: USINT; (* CAMPO ONDE EH DIGITADO A SENHA NA TELA PASS *)
	IHM_STRING_TITLE: STRING(20); (* STRING DA BARRA TITULO *)
	IHM_STRING_DESCRIPTION: STRING(30); (* STRING DA BARRA DESCRICAO *)
	IHM_STRING_MODELOS: ARRAY [1..4] OF INT; (* NOMES DOS MODELOS NA TELA MAIN *)
	IHM_STRING_CREDIT: ARRAY [1..4] OF STRING(40); (*LINHAS DE ESCRITA DA TELA CREDITS *)
	IHM_STRING_CHAVE: STRING(3); (* CHAVE QUE APARECE NA TELA PASS *)
	IHM_NUMMAX_SENSORES: USINT; (* NUMERO MAXIMO DE SENSORES - SO NA IHM *)
	IHM_NUMMAX_PARAFUSA: USINT; (* NUMERO MAXIMO DE PARAFUSADEIRAS - SO NA IHM *)
	IHM_NUMMAX_PROGBITS: USINT; (* NUMERO MAXIMO DE PROGBITS - SO NA IHM *)
	IHM_NUMMAX_PROGS: USINT; (* NUMERO MAXIMO DE PROGRAMAS DA PARAFUSA - SO NA IHM *)
	IHM_ESCONDER_ZERAR: BOOL; (* ESCONDE O ELEMENTO ZERAR DA TELA MAIN *)
	IHM_ESCONDER_RESET: BOOL; (* ESCONDE O ELEMENTO RESET DA TELA MAIN *)
	IHM_ESCONDER_SETUP: BOOL; (* ESCONDE O ELEMENTO SETUP DA TELA MAIN *)
	IHM_ESCONDER_MODELOS: ARRAY [1..4] OF BOOL; (* ESCONDE OS MODELOS EM BRANCO DA TELA MAIN *)
	IHM_ESCONDER_MODELO4BACK: BOOL; (* ESCONDE O QUARTO MODELO EM CASO DE MODELOS > 4 *)
	IHM_BLOQUEIA_PROGBITS: BOOL; (* BLOQUEIA EDICAO DO PROGBITS NA TELA FIRST *)
	IHM_BLOQUEIA_MODELOS: ARRAY [1..4] OF BOOL; (* BLOQUEIA EDICAO DOS MODELOS NA TELA MAIN *)
	IHM_BLOQUEIA_PROGS: BOOL; (* BLOQUEIA EDICAO DO PROG NA TELA SETUP *)
(*-- vars estado das teclas --*)
	TECLA_F: ARRAY [1..7] OF BOOL; (* VARS CORRESPONDENTES AS TECLAS DE F1..F7 *)
	TECLA_MAIN: BOOL; (* VAR CORRESPONDENTE A TECLA MAIN *)
	TECLA_UP: BOOL; (* VAR CORRESPONDENTE A TECLA UP - SETA PARA CIMA *)
	TECLA_DOWN: BOOL; (* VAR CORRESPONDENTE A TECLA DOWN - SETA PARA BAIXO *)
	TECLA_DOT: BOOL; (* VAR CORRESPONDENTE A TECLA [- +/.]  *)
	TECLA_ZERO: BOOL; (* VAR CORRESPONDENTE A TECLA ZERO *)
	TECLA_ESC: BOOL; (* VAR CORRESPONDENTE A TECLA ESC *)
	TECLA_LEFT: BOOL; (* VAR CORRESPONDENTE A TECLA LEFT - SETA ESQUERDA *)
	TECLA_RIGHT: BOOL; (*VAR CORRESPONDENTE A TECLA RIGHT - SETA DIREITA *)
(*-- outros importantes --*)
	MODELOS_RANGE: USINT := 0; (* SESSAO DE MODELOS QUE APARECE NA IHM - 3 EM 3*)
	KAP_OLDSTATE: BOOL; (* ESTADO ANTERIOR DO KAP *)
	TEM_PARAFUSA: BOOL; (* EXISTE PARAFUSADEIRA NOS ATIVOS LIGADOS *)
	PASS_LIBERADO: BOOL; (* PARA LIBERAR A PASSAGEM PELA TELA PASS - OU SEJA SENHA CORRETA *)
	SENHA_GERADA : USINT; (* NUMERO GERADO PARA SER A SENHA *)
	MODELO_SELECIONADO: INT; (* NUMERO DO MODELO SELECIONADO *)
	PRONTO: USINT; (* VAR DE PROGRAMACAO - INDICA NUMERO DE ATIVOS DESLIGADOS *)
	ARRAY_DE_ATIVOS: ARRAY [1..NUM_ATIVOS] OF USINT; (*ATIVOS - SENSORES E PARAFUSADEIRA - LIGADOS NO MOMENTO *)
	ARRAY_SENSORES_IN: ARRAY [1..NUMMAX_SENSORES] OF BOOL; (* VETOR LÓGICO DAS ENTRADAS DOS SENSORES *)
	ARRAY_SENSORES_OUT: ARRAY [1..NUMMAX_SENSORES] OF BOOL; (* VETOR LÓGICO DAS SAIDAS DOS SENSORES *)
	ARRAY_SENSORES_OLDSTATE: ARRAY [1..NUMMAX_SENSORES] OF BOOL; (* VETOR DE ESTADO ANTERIOR DOS SENSORES *)
	ARRAY_PROGBYTE_PARAFUSA: ARRAY [1..4] OF BOOL; (* VETOR LÓGICO DAS SAIDAS DOS PROGS DA PARAFUSADEIRA *)
	RANDOM_NUM1: USINT := 10; (* NUMERO ALEATORIO UTILIZADO NA CHAVE COMO LETRA-(HEXADECIMAL) *)
	RANDOM_NUM2: USINT := 1; (* NUMERO ALEATORIO UTILIZADO NA CHAVE COMO MULTIPLICADOR *)
	LETRA_ALEATORIA: STRING(1); (* LETRA ALEATORIA UTILIZADA NA CHAVE PROVENIENTE DO RANDOM_NUM1 *)
	ERRO_MATRIZ: BOOL; (* QUANDO A MATRIZ EH SCANEADA E NAO ESTA CONFORME COM OS PARAMETROS DA TELA FIRST*)
	CREDIT_LINHA: USINT := 1; (* VAR DE PROGRAMACAO - NUMERO DE LINHAS DO TERMINAL NA TELA CREDITS *)
	CREDIT_PULSOS : INT; (* VAR DE PROGRAMACAO - NUMERO DE PULSOS ORDENADO PELO TEMPORIZADOR *)
	CREDIT_NUM_CARACTERS : INT; (* VAR DE PROGRAMACAO - NUMERO DE CARACTERES DADOS PELO TAMANHOS DAS STRINGS DO CREDITS *)
(*-- temporizadores --*)
	TEMPO_TON1: TON; (* TEMPORIZADOR DO FINAL DE CICLO - BATENTE*)
	TEMPO_TON2: TON; (* TEMPORIZADOR DO NUMERO ALEATORIO - RAMDOM_NUM2*)
	TEMPO_TON3: TON; (* TEMPORIZADOR DO NUMERO ALEATORIO - RAMDOM_NUM1*)
	TEMPO_TON4: TON; (* TEMPORIZADOR USADO NA TELA CREDITS PARA ESCREVER*)
	TEMPO_TON5: TON;
	TON_SENSORES: ARRAY [1..NUMMAX_SENSORES] OF TON;
END_VAR


(*RETENTIVAS----------------------------------------------------------------------*)
VAR_GLOBAL RETAIN
	MATRIZ: ARRAY [1..NUMMAX_MODELOS, 1..NUM_ETAPAS, 1..NUM_ATIVOS] OF USINT; (* MATRIZ CONTENDO AS SEQUECIAS DE TODOS MODELOS *)
	PRIMEIRO_START: BOOL := TRUE; (* INDICA SE EH A PRIMEIRA VEZ QUE O CLP EH INICIADO APOS DOWNLOAD OU RESET-A-FRIO*)
	NUM_SENSORES: USINT; (* NUMEROS DE SENSORES CONFIGURADO *)
	NUM_PARAFUSA: USINT; (* NUMERO DE PARAFUSADEIRA CONFIGURADO *)
	NUM_PROGBITS: USINT; (* NUMERO DE PROGBITS - SAIDAS DE PROGS DA PARAFUSADEIRA *)
	NUM_MODELOS: USINT; (* NUMERO DE MODELOS CONFIGURADO *)
	MODELOS: ARRAY [1..NUMMAX_MODELOS] OF INT; (* NOME DE TODOS OS MODELOS *)
END_VAR


(*VARS DE ENTRADA-----------------------------------------------------------------*)
VAR_GLOBAL
	KAP_IN AT %IX0.0: BOOL; (* ENTRADA DO CONECTOR KAP - FEEDBACK *)
	ENTRADA1 AT %IX0.1: BOOL; (* SENSOR 1 *)
	ENTRADA2 AT %IX0.2: BOOL; (* SENSOR 2 *)
	ENTRADA3 AT %IX0.3: BOOL; (* SENSOR 3 *)
	ENTRADA4 AT %IX0.4: BOOL; (* SENSOR 4 *)
	ENTRADA5 AT %IX0.5: BOOL; (* SENSOR 5 *)
	ENTRADA6 AT %IX0.6: BOOL; (* SENSOR 6 *)
	ENTRADA7 AT %IX0.7: BOOL; (* SENSOR 7 *)
	ENTRADA8 AT %IX1.0: BOOL; (* SENSOR 8 *)
	ENTRADA9 AT %IX1.1: BOOL; (* SENSOR 9 *)
	ENTRADA10 AT %IX1.2: BOOL; (* SENSOR 10 *)
	ENTRADA11 AT %IX1.3: BOOL; (* SENSOR 11 *)
	ENTRADA12 AT %IX1.4: BOOL; (* SENSOR 12 *)
	ENTRADA13 AT %IX1.5: BOOL; (* SENSOR 13 *)
	ENTRADA14 AT %IX1.6: BOOL; (* SENSOR 14 *)
	ENTRADA15 AT %IX1.7: BOOL; (* nada *)
	TORQUEOK_IN AT %IX2.0: BOOL; (* ENTRADA SINAL TORQUE OK PARAFUSA *)
	TORQUENOK_IN AT %IX2.1: BOOL; (* ENTRADA SINAL TORQUE NOK PARAFUSA *)
END_VAR

(*VARS DE SAIDA-------------------------------------------------------------------*)
VAR_GLOBAL
	BATENTE AT %QX0.0: BOOL; (* SAIDA BATENTE DO POSTO *)
	SAIDA1 AT %QX0.1: BOOL; (* SENSOR 1 *)
	SAIDA2 AT %QX0.2: BOOL; (* SENSOR 2 *)
	SAIDA3 AT %QX0.3: BOOL; (* SENSOR 3 *)
	SAIDA4 AT %QX0.4: BOOL; (* SENSOR 4 *)
	SAIDA5 AT %QX0.5: BOOL; (* SENSOR 5 *)
	SAIDA6 AT %QX0.6: BOOL; (* SENSOR 6 *)
	SAIDA7 AT %QX0.7: BOOL; (* SENSOR 7 *)
	SAIDA8 AT %QX1.0: BOOL; (* SENSOR 8 *)
	SAIDA9 AT %QX1.1: BOOL; (* SENSOR 9 *)
	SAIDA10 AT %QX1.2: BOOL; (* PROGBIT 4 PARAFUSA	|	SENSOR 10 *)
	SAIDA11 AT %QX1.3: BOOL; (* PROGBIT 3 PARAFUSA	|	SENSOR 11 *)
	SAIDA12 AT %QX1.4: BOOL; (* PROGBIT 2 PARAFUSA	|	SENSOR 12 *)
	SAIDA13 AT %QX1.5: BOOL; (* PROGBIT 1 PARAFUSA	|	SENSOR 13 *)
	SAIDA14 AT %QX1.6: BOOL; (* RESET PARAFUSA		|	SENSOR 14 *)
	SAIDA15 AT %QX1.7: BOOL; (* ENABLE PARAFUSA *)
END_VAR
(* @OBJECT_END := 'Variáveis globais' *)
(* @CONNECTIONS := Variáveis globais
FILENAME : ''
FILETIME : 0
EXPORT : 0
NUMOFCONNECTIONS : 0
*)
